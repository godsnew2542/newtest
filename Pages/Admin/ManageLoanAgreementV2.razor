@page "/Admin/ManageLoanAgreement"
@page "/Admin/ManageLoanAgreement/{StatusID:decimal}"
@using LoanApp.Components.WordDoc
@attribute [Authorize(Roles = "2")]

<div class="container-fluid mt-3 pb-5 mb-5">
    <div class="mt-3">
        <div class="section-title" style="font-size:medium">
            <i class="fa-solid fa-file-contract mx-2 fa-lg "></i>
            สัญญากู้ยืมเงิน
        </div>
    </div>

    @if (Lading)
    {
        <Loading Message="@("ระบบกำลังประมวนผล")" />
    }
    else
    {
        <div class="card rounded shadow mt-4 pb-3 px-2 mb-3">
            <div class="mt-2">
                <div class="row justify-content-end mt-3">
                    <div class="col-xl-5 col-lg-5 col-md-5 col-sm-6">
                        <GridRow Gutter="(18,8)">
                            <GridCol Flex="@("auto")">
                                <Input @bind-Value="@SearchView"
                                       Size="@ButtonSize.Large"
                                       Placeholder="ค้นหาจาก ชื่อ-สกุล/เลขที่สัญญา"
                                       OnPressEnter="@(async() => { await OnSearch(SearchView, StaId ,TypeID); })"
                                       AllowClear=true />
                            </GridCol>
                            <GridCol Flex="@("none")">
                                <Button Style="border-radius:8px; background:#367691"
                                        Size="@ButtonSize.Large"
                                        OnClick="@(async()=>{await OnSearch(SearchView, StaId ,TypeID);})">
                                    <i class="fas fa-search" style="color: #ffffff "></i>
                                </Button>
                            </GridCol>
                        </GridRow>
                    </div>
                </div>
            </div>

            <div class="mt-4 mx-2">
                <GridRow Gutter="(8,8)" Align="middle">
                    <GridCol Flex="@("auto")">
                        <h6>
                            <GridRow Gutter="(8,8)" Align="middle">
                                <GridCol Flex="@("none")">
                                    สัญญากู้ยืมจำนวน @(newLoanRequestContracts.Count()) ฉบับ
                                </GridCol>
                                @if (ListRecord.Any())
                                {
                                    <GridCol Flex="@("none")">
                                        <u>
                                            รายการที่เลือก จำนวน @ListRecord.Count() รายการ
                                        </u>
                                    </GridCol>
                                    <GridCol Flex="@("none")">
                                        <Button Type="@ButtonType.Primary"
                                                Size="@ButtonSize.Large"
                                                Class="button-color"
                                                Style="border:none; padding: 0px 20px; background-color:#367691"
                                                OnClick="@(async()=>{await SentEmailWarning (ListRecord);})">
                                            ส่ง Email
                                        </Button>
                                    </GridCol>

                                    <GridCol Flex="@("none")">
                                        <EvidenceAfterLoanForm Size="@(ButtonSize.Large.ToString())" RequestContract="@ListRecord" IsLoading="CallbackLoading" />
                                    </GridCol>
                                }
                            </GridRow>
                        </h6>
                    </GridCol>
                    @if ((new List<decimal>() { 6, 200 }).Contains(StaId) && newLoanRequestContracts.Any())
                    {
                        <GridCol Flex="@("none")">
                            <Button Type="@ButtonType.Primary"
                                    Style="border-radius:8px; width:120px; background-color:#2788de; border:none;"
                                    Size="@ButtonSize.Large"
                                    OnClick="@(()=> { SetOrClearCheckedAsync(true); })">
                                เลือกทั้งหมด
                            </Button>
                        </GridCol>
                        <GridCol Flex="@("none")">
                            <Button Type="@ButtonType.Primary"
                                    Style="border-radius:8px; width:120px; background-color:#FF1818; border:none;"
                                    Size="@ButtonSize.Large"
                                    OnClick="@(()=> { SetOrClearCheckedAsync(false); })">
                                ล้างทั้งหมด
                            </Button>
                        </GridCol>
                    }
                </GridRow>
            </div>

            <div class="panel">
                <div class="panel-body mt-4 table-container"
                     style="border-top-left-radius:10px;border-top-right-radius:10px">
                    <div class="table-header py-3" style="height: 60px;">
                        <div class="ms-3">
                            <h6 style="color:#ffffff">
                                รายการสัญญากู้ยืมเงิน
                            </h6>
                        </div>
                    </div>

                    @* @bind-SelectedRows="selectedRows" *@
                    <Table @bind-PageIndex="_pageIndex"
                           TItem="VLoanRequestContract"
                           DataSource="@newLoanRequestContracts"
                           OnRowClick="SeeDetail"
                           Responsive=true
                           EnableVirtualization=true
                           Class="table-hover-cursor">

                        @if ((new List<decimal>() { 6, 200 }).Contains(StaId) && newLoanRequestContracts.Any())
                        {
                            <ActionColumn Title="เลือก"
                                          HeaderStyle="text-align:center; font-weight:bold;">
                                @{
                                    bool Checked_Checkbox = GetCheckRequestId(context);
                                }
                                <Checkbox Checked="@(Checked_Checkbox)" OnChange="@(()=>{CheckboxClickedV2(context.LoanRequestId, context);})" />
                            </ActionColumn>
                        }

                        <PropertyColumn Title="ผู้กู้"
                                        Property="c=>c.DebtorStaffId"
                                        HeaderStyle="text-align:center; font-weight:bold;">
                            @(userService.GetNameForDebtor(context)?.FullNameTh)
                        </PropertyColumn>

                        <PropertyColumn Title="เลขที่สัญญา"
                                        Property="c=>c.ContractNo"
                                        HeaderStyle="text-align:center; font-weight:bold;"
                                        Style="text-align:center;" />

                        <PropertyColumn Title="ประเภทกู้ยืม"
                                        Property="c=>c.LoanTypeName"
                                        HeaderStyle="text-align:center; font-weight:bold;" />

                        <PropertyColumn Title="สถานะ"
                                        Property="c=>c.CurrentStatusId"
                                        HeaderStyle="text-align:center; font-weight:bold;">
                            @{
                                string? CurrentStatusName = context.CurrentStatusName;
                            }

                            @switch (context.CurrentStatusId)
                            {
                                case 6:
                                    <LoanApp.Components.Ant.TagAnt color="@(PresetColor.Purple.ToString())"
                                                                   message="@CurrentStatusName" />
                                    break;

                                case 7:
                                    <LoanApp.Components.Ant.TagAnt color="@(PresetColor.Lime.ToString())"
                                                                   message="@CurrentStatusName" />
                                    break;

                                case 8:
                                    <LoanApp.Components.Ant.TagAnt color="rgb(143, 201, 146)"
                                                                   message="@CurrentStatusName">
                                        <header>
                                            <i class="fas fa-check-circle me-2" style="color:white"></i>
                                        </header>
                                    </LoanApp.Components.Ant.TagAnt>
                                    break;

                                case 80:
                                    <LoanApp.Components.Ant.TagAnt color="@(PresetColor.Orange.ToString())"
                                                                   message="@CurrentStatusName">
                                        <header>
                                            <i class="fas fa-frown me-2" style="color: #d46b08"></i>
                                        </header>
                                    </LoanApp.Components.Ant.TagAnt>
                                    break;

                                case 81:
                                    <LoanApp.Components.Ant.TagAnt color="@(PresetColor.Volcano.ToString())"
                                                                   message="@CurrentStatusName">
                                        <header>
                                            <i class="fas fa-frown me-2" style="color: #d4380d"></i>
                                        </header>
                                    </LoanApp.Components.Ant.TagAnt>
                                    break;

                                case 82:
                                    <LoanApp.Components.Ant.TagAnt color="@(PresetColor.Magenta.ToString())"
                                                                   message="@CurrentStatusName">
                                        <header>
                                            <i class="fas fa-frown me-2" style="color: #c41d7f"></i>
                                        </header>
                                    </LoanApp.Components.Ant.TagAnt>
                                    break;

                                case 99:
                                    <LoanApp.Components.Ant.TagAnt color="@(PresetColor.Green.ToString())"
                                                                   message="@CurrentStatusName">
                                        <header>
                                            <i class="fas fa-smile me-2" style="color: #389e0d"></i>
                                        </header>
                                    </LoanApp.Components.Ant.TagAnt>
                                    break;

                                case 98:
                                    <LoanApp.Components.Ant.TagAnt color="@(PresetColor.Pink.ToString())"
                                                                   message="@CurrentStatusName" />
                                    break;

                                case 200:
                                    <LoanApp.Components.Ant.TagAnt color="@(PresetColor.Gold.ToString())"
                                                                   message="@CurrentStatusName" />
                                    break;
                            }
                        </PropertyColumn>

                        <PropertyColumn Title="ยอดเงินกู้คงเหลือ"
                                        Property="c=>(c.ContractLoanTotalAmount != null ? c.ContractLoanTotalAmount.Value : c.LoanRequestLoanTotalAmount != null ? c.LoanRequestLoanTotalAmount.Value : c.ContractLoanAmount != null ? c.ContractLoanAmount.Value : 0m)"
                                        HeaderStyle="text-align:center; font-weight:bold;">
                            @{
                                decimal TotalAmount = (context.ContractLoanTotalAmount != null ? context.ContractLoanTotalAmount.Value :
                                context.LoanRequestLoanTotalAmount != null ? context.LoanRequestLoanTotalAmount.Value :
                                context.ContractLoanAmount != null ? context.ContractLoanAmount.Value : 0m);
                            }

                            @String.Format("{0:n2}", TransactionService.GetBalanceTotal(context.ContractId, TotalAmount))
                        </PropertyColumn>

                        <PropertyColumn Title="วันที่กองคลังโอนเงิน"
                                        Property="c=>c.PaidDate"
                                        HeaderStyle="text-align:center; font-weight:bold;"
                                        Sortable>
                            @if (context.PaidDate != null)
                            {
                                @dateService.ChangeDate(context.PaidDate, "dd MMMM yyyy", Utility.DateLanguage_TH)
                            }
                            else
                            {
                                <div class="text-center">-</div>
                            }
                        </PropertyColumn>

                        <ActionColumn Title="กำหนดชำระเงิน"
                                      HeaderStyle="text-align:center; font-weight:bold;">
                            @GetPayDateAsync(context).Result
                        </ActionColumn>
                        <ActionColumn>
                            @{
                                bool isShow = false;
                            }
                            @switch (context.CurrentStatusId)
                            {
                                case 6:
                                    isShow = true;
                                    <button class="button-color shadow rounded"
                                            type="button"
                                            style="width: 140px;border-radius: 3px; color: #ffffff; height: 30px; border: none;"
                                            @onclick="() => UploadAgreementPremise(context.LoanRequestId)">
                                        อัปโหลดหลักฐาน
                                    </button>
                                    break;

                                case 200:
                                    isShow = true;
                                    <button class="button-color shadow rounded"
                                            type="button"
                                            style="width: 140px;border-radius: 3px; color: #ffffff; height: 30px; border: none;"
                                            @onclick="() => UploadAgreementPremise(context.LoanRequestId , true)">
                                        อัปโหลดหลักฐาน
                                    </button>
                                    break;

                                case 7:
                                    isShow = true;
                                    <button class="btn lightBlue justify-content-center mx-2"
                                            style="font-weight:normal"
                                            @onclick="()=> Check(context)">
                                        ตรวจหลักฐาน
                                    </button>
                                    break;

                                case decimal n when n >= 80 && n <= 82:
                                    isShow = true;
                                    <div class="text-center">
                                        การค้างชำระเงิน @($"({context.CurrentStatusId})")
                                    </div>
                                    break;
                            }

                            @if (isShow)
                            {
                                <button class="button-color shadow rounded ml-3"
                                        type="button"
                                        style="width: 140px;border-radius: 3px; color: #ffffff; height: 30px; border: none;"
                                        @onclick="@(()=>{navigationManager.NavigateTo($"/Admin/AgreementDetail/{context.LoanRequestId}");})">
                                    ดูข้อมูล
                                </button>
                            }
                        </ActionColumn>
                    </Table>
                </div>
            </div>
        </div>
    }

</div>

@*footer*@
<div class="footer">
    <div class="row py-1 col-12">
        @*type*@
        <div class="col-xl-1 col-lg-1 col-md-1" style="text-align:end">
            <div class="font-color font-weight-bolder">
                <i class="fas fa-filter me-1"></i>
                ประเภทกู้ยืม
            </div>
        </div>
        <div class="col-xl-2 col-lg-3 col-md-3">
            <select class="form-select form-select-sm"
                    id="selectLoanTypeId"
                    @onchange="SelectLoanTypeIDAsync">
                @for (var i = 0; i < LoanTypeList.Count; i++)
                {
                    var item = LoanTypeList[i];
                    <option value="@item.LoanTypeId">@item.LoanTypeName</option>
                }
            </select>
        </div>

        @*status*@
        <div class="col-xl-1 col-lg-1 col-md-1" style="text-align:end">
            <div class="font-color font-weight-bolder">
                สถานะการกู้
            </div>
        </div>
        <div class="col-xl-2 col-lg-3 col-md-3">
            <select class="form-select form-select-sm"
                    id="selectTagName"
                    @onchange="SelectStatusAsync">
                @for (var i = 0; i < Status.Count; i++)
                {
                    var item = Status[i];
                    <option value="@item.ContractStatusId">@item.ContractStatusName</option>
                }
            </select>
        </div>
    </div>
</div>

<style scoped>
    :root .ant-table-pagination.ant-pagination {
        margin: 10px !important;
    }
</style>

@code {
}
